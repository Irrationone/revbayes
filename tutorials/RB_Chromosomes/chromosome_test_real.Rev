# by Will Freyman
#
# source("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/chromosome_test_real.Rev")
#

# read the data 
# real data from mayrose 2010
# this is hack data because Aristolochia_taliscana and Aristolochia_tentaculata are sisters on 0 length branches,
# yet are supposed to have chromosome numbers of 6 and 7 respectively. This causes a bug in MonteCarloSampler.cpp "Could not compute lnProb for node seq"
# therefore both species are set to chromosome number 7. This bug could probably be fixed by setting all 0 branch lengths to 0.000001 or something...
chromoData <- readChromosomes("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/data/matK_chromosomes_hack.tsv")

# work under fixed topology with total tree length = 0.2907
# Mayrose et al 2010 found about 1 polyploidization event and ~1.5 chromosome increases and ~8 decreases
# so we expect roughly lambda = 5.2, delta = 27, and rho = 3.48 (though Mayrose et al had different branch lengths) 
treeArray <- readBranchLengthTrees("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/data/matK_tree_lengths.nwk")
psi <- treeArray[1]


#######################
# Chromosome Model
#######################


# rate of chromosome gains
pr_lambda ~ unif(0.0, 10.0)
lambda ~ exponential(pr_lambda)
lambda.setValue(1.0)

# rate of chromosome losses
pr_delta ~ unif(0.0, 10.0)
delta ~ exponential(pr_delta)
delta.setValue(1.0)

# rate of polyploidization
pr_rho ~ unif(0.0, 10.0)
rho ~ exponential(pr_rho)
rho.setValue(1.0)

# max number of chromosomes
max_chromo <- 26

# create rate matrix
Q := chromosomes(max_chromo, lambda, delta, rho)

#########
## TODO: properly estimate root state!!!
#########


## here we set the root state to 4 just to keep things simple
#root_frequencies := simplex(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
root_frequencies := simplex(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
#root_frequencies := simplex(rep(max_chromo, 1))

# typically we would use simplex(1,1,1,1,1,...,1) made by function simplex(rep(max_chromo, 1))

##############
# set up moves
#############
mi <- 0
moves[mi++] <- mvScale(lambda, tune=true) 
moves[mi++] <- mvScale(delta, tune=true) 
moves[mi++] <- mvScale(rho, tune=true) 

moves[mi++] <- mvScale(pr_lambda, tune=true)
moves[mi++] <- mvScale(pr_delta, tune=true)
moves[mi++] <- mvScale(pr_rho, tune=true)


###############
# create the model
###############
seq ~ phyloCTMC(Q=Q, tree=psi, rootFreq=root_frequencies,type="Chromosomes")

# clamp data
seq.clamp(chromoData)

mymodel <- model(Q)

# create the monitors
monitors[1] <- screenmonitor(printgen=10, lambda, delta, rho)
monitors[2] <- filemonitor(filename="/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real.trees", printgen=10, separator = "	", psi)
monitors[3] <- mnAncestralState(filename="/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real.log",printgen=10, separator = "	", branchlengthtree=psi, character=seq)
monitors[4] <- modelmonitor(filename="/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real_model.log",printgen=10, separator = "	")

# set up mcmc
mymcmc <- mcmc(mymodel, monitors, moves)
#mymcmc.burnin(generations=1000,tuningInterval=100)
mymcmc.run(50000)

# summarize results, first get the MAP tree
treetrace <- readTreeTrace("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real.trees", treetype="non-clock", separator="	"); 
map <- mapTree(treetrace,"/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real_map.tree")

# now summarize ancestral states over the MAP tree
ancestral_state_trace <- readAncestralStateTrace("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real.log", separator="	"); 
ancestral_state_tree_trace <- readAncestralStateTreeTrace("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real.trees", treetype="non-clock", separator="	"); 
ancestralStateTree(map, ancestral_state_trace, ancestral_state_tree_trace, "/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_real_map_states.tree")
