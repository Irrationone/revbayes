# by Will Freyman
#
# source("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/chromosome_test_toy.Rev")
#

# read the data 
# this is toy data in which there are clearly 2 polyploidization events and no other events
chromoData <- readChromosomes("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/data/matK_chromosomes_toy.tsv")

# work under fixed topology with total tree length = 0.2907
# so we expect lambda and delta to be about 0, and rho to be 6.88 (=2/0.2907)
treeArray <- readTrees("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/data/matK_tree_lengths.nwk")
psi <- treeArray[1]


#######################
# Chromosome Model
#######################


# rate of chromosome gains
pr_lambda ~ unif(0.0, 10.0)
lambda ~ exponential(pr_lambda)
lambda.setValue(1.0)

# rate of chromosome losses
pr_delta ~ unif(0.0, 10.0)
delta ~ exponential(pr_delta)
delta.setValue(1.0)

# rate of polyploidization
pr_rho ~ unif(0.0, 10.0)
rho ~ exponential(pr_rho)
rho.setValue(1.0)

# max number of chromosomes
max_chromo <- 35

# create rate matrix
Q := chromosomes(max_chromo, lambda, delta, rho)

#########
## TODO: properly estimate root state!!!
#########


## here we set the root state to 4 just to keep things simple
root_frequencies := simplex(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)

# typically we would use simplex(1,1,1,1,1,...,1) made by function simplex(rep(max_chromo, 1))

##############
# set up moves
#############
mi <- 0
moves[mi++] <- mvScale(lambda, tune=true) 
moves[mi++] <- mvScale(delta, tune=true) 
moves[mi++] <- mvScale(rho, tune=true) 

moves[mi++] <- mvScale(pr_lambda, tune=true)
moves[mi++] <- mvScale(pr_delta, tune=true)
moves[mi++] <- mvScale(pr_rho, tune=true)


###############
# create the model
###############
seq ~ phyloCTMC(Q=Q, tree=psi, rootFreq=root_frequencies,type="Chromosomes")

# clamp data
seq.clamp(chromoData)

mymodel <- model(Q)

# create the monitors
monitors[1] <- screenmonitor(printgen=10, lambda, delta, rho)
monitors[2] <- filemonitor(filename="/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_toy.trees", printgen=10, separator = "	", psi)
monitors[3] <- mnAncestralState(filename="/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_toy.log",printgen=10, separator = "	", timetree=psi, character=seq)
 
# set up mcmc
mymcmc <- mcmc(mymodel, monitors, moves)
#mymcmc.burnin(generations=1000,tuningInterval=100)
mymcmc.run(100)

treetrace <- readTreeTrace("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_toy.trees", treetype="non-clock", separator="	"); 
ancestraltrace <- readAncestralStateTrace("/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_toy.log", separator="	"); 
mapAncestralState(ancestraltrace, treetrace, "/Users/mucho/Documents/projects/revbayes/revbayes/tutorials/RB_Chromosomes/output/anc_states_chromosome_test_toy.tree")


