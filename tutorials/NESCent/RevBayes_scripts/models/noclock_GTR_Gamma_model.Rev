################################################################################
#
# RevBayes Example: Phylogeny inference using the general time reversible
#                   substitution model with rate variation among sites.
#
# 
# This file: Specifies the a GTR+gamma subtitution model with uncorrelated, exponentially
#            distributed branch lengths. The tree is unrooted.
#            Here, we run an MCMC on this model.
#
# authors: Sebastian Hoehna
#
################################################################################



#######################
# Reading in the Data #
#######################

data_atpB <- readCharacterData("data/conifer_atpB.nex")
data_rbcL <- readCharacterData("data/conifer_rbcL.nex")

### Create concatenated data matrix
data <- data_atpB + data_rbcL

# You may want to check some stuff from the data matrix.
# You can always find the available member methods of an object by xxx.methods() where xxx is your variable name.
data


# Get some useful variables from the data. We need these later on.
taxaCount <- data.ntaxa()
nSites <- data.nchar()[1]
names <- data.names()



##############
# Tree model #
##############

# Specify a uniform topology prior
tau ~ uniformTopology(taxaCount, names)

# create an index variable for our moves vector
mi <- 0

# create a random variable for each branch length
numNodes <- tau.nnodes()
for (i in 1:numNodes) {
  # We use here the exponential distribution with rate 1.0 as the branch length prior
  brlens[i] ~ dnExponential(10.0)
  
  # Add a move for the branch length. We just take a simple scaling move since the value is a positive real number.
  moves[mi++] <- mvScale(brlens[i]) 
}
# create a deterministic variable for monitoring purposes
tree_length := sum(brlens)


# Build the tree by combining the topology with the branch length.
psi := treeAssembly(tau, brlens)

# moves on the tree
moves[mi++] <- mvNNI(tau)



#######################
# Substitution Models #
#######################


#### specify the GTR substitution model applied uniformly to all sites ###
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[mi++] <- mvSimplexElementScale(er)


sf_prior <- v(1,1,1,1) 
sf ~ dnDirichlet(sf_prior)
moves[mi++] <- mvSimplexElementScale(sf)


#### create a deterministic variable for the rate matrix ####
Q := gtr(er,sf) 




#############################
# Among Site Rate Variation #
#############################

# As for the substitution model and the clock model above, 
# we assume that each gene family has its own set of parameters. 

shape_prior <- 0.05 
shape ~ dnExponential( shape_prior )
norm_gamma_rates := discretizeGamma( shape, shape, 4, false )
moves[mi++] <- mvScale(shape)






###############
# Clock Model #
###############

# we could specify here a rate scalar or something similar, for examble different rate per branch
# in this case we keep the rate multiplier by 1.0
clockRate <- 1.0





###################
# PhyloCTMC Model #
###################


# the sequence evolution model
seq ~ substModel(tree=psi, Q=Q, siteRates=norm_gamma_rates, branchRates=clockRate, type="DNA")

# attach the data
seq.clamp(data)




#############
# THE Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel <- model(Q)





