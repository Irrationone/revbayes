#######################################
###### birth-death process priors #####
#######################################

T <- readTrees("data/bears.tre")[1]

## diversification = birth_rate - death_rate
diversification ~ exponential(10.0) 
diversification.setValue(0.01)

## turnover = death_rate / birth_rate
turnover ~ dnBeta(2, 2) 

## Creating deterministic nodes for birth & death rates to match previous implmentation
denom := abs(1.0 - turnover) # even though this will always be pos, this is needed for det nodes to be RealPos for cBDP
birth_rate := diversification / (denom)
death_rate := (turnover * diversification) / (denom)

## putting a Normal prior on the age of the origin

tHesperocyon <- 38.0
mean_ra <- 50.0
stdv_ra <- 0.25
mu_ra <- ln(mean_ra) - ((stdv_ra*stdv_ra) * 0.5)
root_time ~ dnLnorm(mu_ra, stdv_ra, offset=tHesperocyon)



clade_Ursidae <- clade("Ailuropoda_melanoleuca","Tremarctos_ornatus","Helarctos_malayanus",
						"Ursus_americanus","Ursus_thibetanus","Ursus_arctos","Ursus_maritimus","Melursus_ursinus")

clade_UrsPinn <- clade("Ailuropoda_melanoleuca","Tremarctos_ornatus","Helarctos_malayanus",
						"Ursus_americanus","Ursus_thibetanus","Ursus_arctos","Ursus_maritimus","Melursus_ursinus",
						"Phoca_largha")

constraints <- v(clade_Ursidae, clade_UrsPinn)


# tree from birth-death process 
tau ~ dnBDP(lambda=birth_rate, mu=death_rate, rootAge=root_time, samplingStrategy="uniform", condition="nTaxa", nTaxa=n_taxa, names=names,constraints=constraints)


tau.setValue(T)

tmrca_Urs := tmrca(tau,clade_Ursidae)
n_TMRCA_Urs := -(tmrca_Urs)
tKretzoiarctos <- -11.2
sdv <- 0.25
M <- 10
mu <- ln(M) - ((sdv * sdv) * 0.5)
fossil_Urs ~ dnLnorm(mu, sdv, offset=n_TMRCA_Urs)
fossil_Urs.clamp(tKretzoiarctos)

tmrca_UrsPinn := tmrca(tau,clade_UrsPinn)
n_TMRCA_UrsPinn := -(tmrca_UrsPinn)
tParictis <- -33.9
fossil_Paric ~ dnExponential(lambda=0.0333, offset=n_TMRCA_UrsPinn)
fossil_Paric.clamp(tParictis)

moves[mi++] <- mvScale(diversification,lambda=1.0,tune=true,weight=3.0)
moves[mi++] <- mvScale(turnover,lambda=1.0,tune=true,weight=3.0)

moves[mi++] <- mvNodeTimeSlideUniform(tau, weight=30.0)
moves[mi++] <- mvSlide(root_time, delta=2.0, tune=true, weight=10.0)
moves[mi++] <- mvScale(root_time, lambda=2.0, tune=true, weight=10.0)
moves[mi++] <- mvTreeScale(tree=tau, rootAge=root_time, delta=1.0, tune=true, weight=3.0)

moves[mi++] <- mvNNI(tau, weight=8.0)
moves[mi++] <- mvNarrow(tau, weight=8.0)
#moves[mi++] <- mvFNPR(tau, weight=8.0)
