############################################################################################
#   File: diversification tutorial birth-death, rho ~ Beta(1,14) model specification file
############################################################################################

## read in the tree 
T <- readTrees("data/bears_dosReis.tre")[1]

## get useful variables from the tree
n_taxa <- T.ntips()
names <- T.names()

## Moves iterator
mi <- 0 

#######################################
###### birth-death process model  #####
#######################################

### diversification = birth_rate - death_rate
### assume an exponential prior distribution 
### and apply a scale proposal
diversification ~ dnExponential(10.0) 
moves[mi++] <- mvScale(diversification,lambda=1.0,tune=true,weight=3.0)

### turnover = death_rate / birth_rate
### this parameter can only take values between 0 and 1
### use a Beta prior distribution
### and a slide move
turnover ~ dnBeta(2.0, 2.0) 
moves[mi++] <- mvSlide(turnover,delta=1.0,tune=true,weight=3.0)

### the parameters of the BDP include birth and death rates
### these are deterministic variables of the diversification & turnover
##### create a variable to ensure the rates are always positive (RealPos)
denom := abs(1.0 - turnover) 
##### birth_rate = diversification / (1 - turnover)
birth_rate := diversification / (denom)
##### death_rate = (turnover * diversification) / (1 - turnover)
death_rate := (turnover * diversification) / (denom)

### rho is the probability of sampling species at the present
### assume rho is drawn from a beta distribution with an expected value of 0.067
### operate on this parameter using a slide move
rho ~ dnBeta(1.0, 14.0)
moves[mi++] <- mvSlide(rho,delta=1.0,tune=true,weight=3.0)

### the BDP is conditioned on the root time, we can get this value from our tree and set a constant node
root_time <- treeHeight(T)

### the time tree is a stochastic node modeled by the constant rate birth-death process (dnBDP)
timetree ~ dnBDP(lambda=birth_rate, mu=death_rate, rootAge=root_time, rho=rho, samplingStrategy="uniform", condition="nTaxa", nTaxa=n_taxa, names=names)

### clamp the model with the "observed" tree
timetree.clamp(T)

### workspace model wrapper ###
mymodel <- model(diversification)

