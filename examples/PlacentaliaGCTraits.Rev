#
# Tutorial -- the phylogenetic comparative method
# Correlation analysis of life-history traits in placental mammals
# Nicolas Lartillot -- July 2014
#

# read the sequence data
# the readCharacter function returns a vector of matrices. We just take the first one
data <- readCharacterData("data/plac40_4fold.nex")

# get some useful variables from the data
taxaCount <- data.ntaxa()
names <- data.names()
nSites <- data.nchar()[1]

# read the quantitative trait data 
contData <- readCharacterData("data/plac40lhtlog.nex")

# get some useful variables from the data
contTaxaCount <- contData.ntaxa()
nTraits <- contData.nchar()[1]

"number of traits to analyze"
nTraits

#create a tree whose tips match the taxon names given by the dataset
tau ~ uniformTimeTree( originTime = 200.0, taxonNames = names)

# work under fixed topology
# set tau equal to externally given tree
treeArray <- readTrees("data/chronoplac40.tree")
fixedTree <- treeArray[1]
tau.clamp(fixedTree)

index <- 1

# moves on the tree: only relative dates
moves[index] <- mSubtreeScale(tau, weight=5.0)
index <- index + 1
moves[index] <- mNodeTimeSlideUniform(tau, weight=10.0)
index <- index + 1

# covariance matrix (of dimension nTraits)
# of parameters kappa * I3 and 5 degrees of freedom

kappa ~ exponential(1.0)
kappa.setValue(0.1)

df <- nTraits+4
covdim <- nTraits+2

sigma ~ invWishart(dim=covdim, kappa=kappa, df=df)

# moves on kappa
moves[index] <- mScale(kappa, lambda=2.0, tune=true, weight=3.0)
index <- index + 1

# multivariate Brownian process along the tree
br ~ mvtBrownian(tau,sigma=sigma)

# conjugate Gibbs move on covariance matrix
moves[index] <- mvConjugateInverseWishartBrownian(sigma=sigma, process=br, kappa=kappa, df=df, weight=1) 
index <- index + 1

# moves on the Brownian process
moves[index] <- mvMultivariatePhyloProcessSliding(process=br,lambda=1,tune=true,weight=100) 
index <- index + 1
moves[index] <- mvMultivariatePhyloProcessTranslation(process=br,lambda=0.1,tune=true,weight=1) 
index <- index + 1

# condition Brownian model on quantitative trait data
# i.e. clamp the process at the tips of the tree, ot the values observed in extant taxa
# you need to do this trait by trait

for (i in 1:nTraits)	{

	# here we say that the ith entry of the Brownian process should map to the ith. quantitative trait
	br.clampAt(contData,i+2,i)
}

bf <- v(1,1,1,1)
pi ~ dirichlet(bf)
pi

# moves on the substitution process parameters
moves[index] <- mSimplexElementScale(pi, alpha=10.0, tune=true, weight=1.0)
index <- index + 1

"exp rates"
# rate variation along the tree
rootval <- 0
rate := expbranchtree(tree=tau,process=br,offset=rootval,1)
rate

"gc"
gctree := tanhBranchTree(tree=tau,process=br,offset=rootval,traitindex=2)

gctree

tstv ~ exponential(1)
tstv

rootgc ~ beta(alpha=1,beta=1)

"matrix tree"

matrixtree := t92GCBranchTree(tree=tau,gctree=gctree,rootgc=rootgc,kappa=tstv)


"subs"
# the sequence evolution models
seq ~ substModel(tree=tau, Q=matrixtree, rootFrequencies=pi, branchRates=rate, nSites=nSites, type="DNA")

"subs ok"

seq.clamp(data)

"mymodel"

mymodel <- model(kappa)

monitors[1] <- screenmonitor(printgen=10, sigma)
monitors[2] <- filemonitor(filename="placdrlht1.cov",printgen=10, separator = "	", sigma)
monitors[3] <- filemonitor(filename="placdrlht1.traits",printgen=10, separator = "	", br)
monitors[4] <- modelmonitor(filename="placdrlht1.log",printgen=10, separator = "	")
 
mymcmc <- mcmc(mymodel, monitors, moves)

mymcmc.run(1000000)


