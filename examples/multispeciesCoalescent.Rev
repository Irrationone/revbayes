################################################################################
#
# RevBayes Example: Species tree inference using the multispecies coalescent.
#
# 
# This file: Specifies the full GTR model with a strict clock and an offset 
#            exponential distribution as a node calibration.
#            Here, we run an MCMC on this model.
#
# authors: Bastien Boussau and Sebastian Hoehna
#
################################################################################




########
# Data #
########


# read in the character data
filenames <- v("data/Cettiidae_cytb.nex", "data/Cettiidae_G3P.nex", "data/Cettiidae_myo.nex", "data/Cettiidae_ODC.nex")

n_parts <- filenames.size()
for (i in 1:n_parts){
  data[i] <- readCharacterData(filenames[i])[1]
  n_sites[i] <- data[i].nchar(1)
}

# Get some useful variables from the data. We need these later on.
n_species <- data[1].ntaxa()
names <- data[1].names()
n_branches <- 2 * n_species - 3






######################
# Species-Tree model #
######################

# Birth-Death process priors
speciation ~ exponential(10.0)
extinction ~ exponential(10.0)
org ~ unif(0,100.0)

moveIndex <- 0

# moves for the birth-death paramaters
moves[moveIndex++] <- mvScale(speciation,1,true,1.0)
moves[moveIndex++] <- mvScale(extinction,1,true,1.0)
moves[moveIndex++] <- mvSlide(org,delta=1.0,true,2.0)

# tree from birth-death process
speciesTree ~ cBDP(lambda=speciation, mu=extinction, origin=org, nTaxa=taxaCount, names=names)

# moves on the tree
moves[moveIndex++] <- mvNNI(speciesTree, 1.0)
moves[moveIndex++] <- mvFNPR(speciesTree, 1.0)
moves[moveIndex++] <- mvSubtreeScale(speciesTree, 5.0)
moves[moveIndex++] <- mvTreeScale(speciesTree, 1.0, true, 3.0)
moves[moveIndex++] <- mvNodeTimeSlideUniform(speciesTree, 10.0)
moves[moveIndex++] <- mvRootTimeSlide(speciesTree, 1.0, true, 3.0)



###################
# Gene-Tree model #
###################

taxa <- readTaxonData("data/Cettiidae_Taxon_data.txt")

# perhaps a better prior here!!!
Ne ~ gamma(shape=1.0,rate=1.0)
moves[moveIndex++] <- mvScale(Ne,1,true,1.0)

for (i in 1:n_parts) {

   # tree from birth-death process
   geneTree[i] ~ dnConstPopMultispCoal(speciesTree=speciesTree, Ne=Ne, taxa=taxa)

   # moves on the tree
   moves[moveIndex++] <- mvNNI(geneTree[i], 1.0)
   moves[moveIndex++] <- mvFNPR(geneTree[i], 1.0)
   moves[moveIndex++] <- mvSubtreeScale(geneTree[i], 5.0)
   moves[moveIndex++] <- mvTreeScale(geneTree[i], 1.0, true, 3.0)
   moves[moveIndex++] <- mvNodeTimeSlideUniform(geneTree[i], 10.0)
   moves[moveIndex++] <- mvRootTimeSlide(geneTree[i], 1.0, true, 3.0)

}



######################
# Substitution Model #
######################

for (i in 1:n_parts) {

  er_prior[i] <- v(1,1,1,1,1,1)
  er[i] ~ dnDirichlet(er_prior[i])
  moves[moveIndex++] <- mvSimplexElementScale(er[i], alpha=10, tune=true, weight=3) 

  sf_prior[i] <- v(1,1,1,1)
  sf[i] ~ dnDirichlet(sf_prior[i])
  moves[moveIndex++] <- mvSimplexElementScale(sf[i], alpha=10, tune=true, weight=2) 

  Q[i] := gtr(er[i],sf[i]) 

}







###############
# Clock Model #
###############


for (i in 1:n_parts) {
  branchRates[i] ~ exponential(1.0)
  moves[moveIndex++] <- mvScale(branchRates[i], lambda=0.8, tune=true, weight=3.0)
}






#############################
# Among Site Rate Variation #
#############################



for (i in 1:n_parts){

  shape_prior[i] <- 0.05 
  shape[i] ~ dnExponential( shape_prior[i] )
  norm_gamma_rates[i] := discretizeGamma( shape[i], shape[i], 4, false )
  moves[moveIndex++] <- mvScale(shape[i], lambda=0.8, tune=true, weight=3.0)

}




###################
# PhyloCTMC Model #
###################


for (i in 1:n_parts){
  phyloSeq[i] ~ phyloCTMC(tree=geneTree[i], Q=Q[i], clockRate=branchRates, siteRates=norm_gamma_rates[i], nSites=n_sites[i], type="DNA")
  phyloSeq[i].clamp(data[i])
}



#############
# THE Model #
#############

mymodel <- model(pi)




############
# Monitors #
############

monitors[1] <- modelmonitor(filename="gtr_clock.log",printgen=10, separator = "	")
monitors[2] <- filemonitor(filename="gtr_clock.trees",printgen=10, separator = "	", tau)
monitors[3] <- screenmonitor(printgen=10, pi)



########
# MCMC #
########

 
mymcmc <- mcmc(mymodel, monitors, moves)

# Note that one mcmc iteration includes 33 proposal (incl. accept/reject) which is the number of moves times their weight.
# If you choose more or different proposals, or different weights for the proposals, then the number of proposals changes per iteration.
mymcmc.burnin(generations=1000,tuningInterval=100)
mymcmc.run(generations=2000)



###################
# Output analyses #
###################

# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
 treetrace <- readTreeTrace("gtr_clock.trees")
# and get the summary of the tree trace
 treetrace.summarize()


 mapTree(treetrace,"primates_clock_MAP.tre")