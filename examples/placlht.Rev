# Test file for mcmc on gtr model with primates dataset

# read the data
# the readCharacter function returns a vector of matrices. We just take the first one
dataArray <- readCharacterData("data/plac73_4fold.nex")
data <- dataArray[1]

# get some useful variables from the data
taxaCount <- data.ntaxa()
names <- data.names()
nSitesArray <- data.nchar()
nSites <- nSitesArray[1]

tau ~ uniformTimeTree( originTime = 200.0, taxonNames = names)

# work under fixed topology
# set tau equal to externally given tree
treeArray <- readTrees("data/chronoplac73.tree")
fixedTree <- treeArray[1]
tau.clamp(fixedTree)

contDataArray <- readCharacterData("data/plac73lhtlog.nex")
contData <- contDataArray[1]
contData

# covariance matrix (3x3)
# of parameters kappa * I3 and 5 degrees of freedom
kappa ~ exponential(1.0)
df <- 5
dim <- 3
sigma ~ invWishart(dim=dim,kappa=kappa,df=df)

"sigma"
sigma

"asking for cov(1,2)"
sigma.covariance(i=1,j=2)

"asking for cov(2,2)"
sigma.covariance(2,2)

# moves on kappa and precision matrix
index <- 1
moves[index] <- mScale(kappa, lambda=2.0, tune=true, weight=3.0)
index <- index + 1

# bivariate Brownian process
br ~ mvtBrownian(tau,sigma=sigma)

# moves on the Brownian process
moves[index] <- mvMultivariatePhyloProcessSliding(process=br,lambda=1,tune=true,weight=100) 
index <- index + 1
moves[index] <- mvMultivariatePhyloProcessTranslation(process=br,lambda=0.1,tune=true,weight=1) 
index <- index + 1

# conjugate move
#moves[index] <- mvCovarianceMatrixSimple(x=sigma, lambda=1.0, tune=true, weight=10) 
#index <- index + 1
#moves[index] <- mvCovarianceMatrixSimple(x=sigma, lambda=0.1, tune=true, weight=10) 
#index <- index + 1
moves[index] <- mvConjugateInverseWishartBrownian(sigma=sigma, process=br, kappa=kappa, df=df, weight=1) 
index <- index + 1

br.clampAt(contData,1,1)
br.clampAt(contData,2,2)
br.clampAt(contData,3,3)

mymodel <- model(kappa)

monitors[1] <- screenmonitor(printgen=100, separator = "	", sigma)
monitors[2] <- filemonitor(filename="brown.prec",printgen=100, separator = "	", sigma)
monitors[3] <- modelmonitor(filename="brown.log",printgen=100, separator = "	")
 
mymcmc <- mcmc(mymodel, monitors, moves)

mymcmc.run(10000000)


