/* * DistNormal.h * *  Created on: 25 aug 2009 *      Author: Sebastian */#ifndef DistUniform_H#define DistUniform_H#include "Distribution.h"#include "RbDouble.h"class DAGNode;class DistUniform : Distribution {public:	DistUniform(DAGNode* l, DAGNode* u, DAGNode* x);	DistUniform(DistNormal& d);	virtual ~DistUniform();        RbObject*           clone(void) const;                                    //!< Clone object        bool                equals(const RbObject* o) const;                      //!< Equals comparison        const StringVector& getClass(void) const;                                   //!< Get class        bool                        isType(const std::string t) const;                        //!< Is the object of type t?       void                print(std::ostream& o) const;                         //!< Print complete object info       void                printValue(std::ostream& o) const;                    //!< Print value (for user)       std::string         toString(void) const;                                 //!< General info on object        // overloaded operators        RbObject&			operator=(const RbObject& o);	double lnPdf(void); //!< Ln probability density	double pdf(void); //!< Probability densityprivate:	DAGNode* lower;	DAGNode* upper;	DAGNode* obs;};#endif /* DISTNORMAL_H_ */